13.gün -1.ödev-4. adým notlarý:

Entities/Concrete içerisindeki CarImage nesnemizi yaratalým önce, ççünkü birçok yerde kullanýlýyor
Bunu yaratmadan önce SQL tablomuzu hazýrlayalým (Id,CarId,ImagePath,Date yaptým þimdilik umarý ilerde sorun çýkmaz)-CARS DAKÝ CARID-ÝLE ÝMAGE DEKÝ CARID ARASI baðlantý kur-ben diyagramdan yaptým
CarImage içerisinde SQL e eþdeðer özelliklerini yazalým.
CarImage bir IEntity dir yazmayý unutma :

OK
---
FILE HELPER YÜKLEMEK gerekli emin deðilim- file helpers diye yazaný yükledim
---
Business/abstarct -ýcarimageservice-kodlarýný yazalým- IdataRsult (getall,getbycarid,getbyid) ve IResult(add delete update)-bunlarýn bazý kýsýmlarýnda paramtre içerisine IForm file gerekiyor
//IFormFile projemize bir dosya yüklemek için kulanýlan yöntemdir, HttpRequest ile gönderilen bir dosyayý temsil eder.
ctrl + nokta ile asp.netcore.http yi seçve yükle
manager e implemente et

---
IFýleHelper interface'inde gerekli olan 3 fonksiyonu yazalým
upload(	dosya ve root ister parametre olarak),delet(dosya konumunu ister),Update ise bu üç deðerden herhangi birini güncellemek isteyebilri
manager e implemente et

içerisindeki kodlarý sonraki adýmlarda  yazacaðýz
---
DataAccess.Concrete.EntityFramework içerisndeki ReCap Contextimiz ile sqldeki CarImage dosyamýz ile nesnemizi baðlayalým
--
DataAccess.Concrete.EntityFramework içerisindeki  EFcarimagedal daki çözmediðimiz noktalarý çözüp düzelttik
DataAccess.Abstract ýcarimagedal ý çözmeyi unutmuþum -çözdüm
----
GuidHelpers diye bir klasör açalým lazým olacak - þu an nedennasýl bilmiyorum-fakat þunu biliyoruz görsellere  unique benzersiz bir id tanýlamaya yarayacak ki isimleri denk gelmesin
konumu:core utilities helpers

//-------------------------------------------------4. Adým Sonu----------------------------------------------------------------------------------------------------------//
